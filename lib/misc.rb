require "./lib/board"
require 'Colorize'

##############################################################################

# obtains a random, single pair of coordinates
def get_random_coords
  row = rand(10)
  col = rand(10)
  return [row, col]
end

##############################################################################

def print_message_and_clear
  print $message
  $message = ""
end

##############################################################################

def print_message_and_clear_and_get_input
  print $message
  $message = ""
  answer = gets.chomp
end

##############################################################################

def header_generator(enemy_or_player)
  header = "\n==========\n"
  header += (enemy_or_player == "enemy" ? "ENEMY ZONE" : "YOUR ZONE")
end

##############################################################################

# prompts player: autogenerate ship orientation and position, or not?
def does_player_want_to_automate_ship_creation
  $message << "Do you want to set up ships [y]ourself, or [a]utomagically? "
  answer = ""
  until answer == 'y' || answer == 'a'
    print_message_and_clear
    answer = gets.chomp
    $message << "Either 'y' or 'a', please. " unless
        answer == 'y' || answer == 'a'
  end
  autogenerated = (answer == 'a' ? true : false)
end

##############################################################################

def human_coords_to_compu_coords(human_coords)
  row, col = human_coords
  row = "abcdefghij".index(row)
  col -= 1
  return [row, col]
end

##############################################################################

def highlight_print(options)
  col, board, n_and_m = options[:col], options[:board], options[:n_and_m]
  n, m = n_and_m
  symbol, highlight = col
  if highlight == true
    board[n][m] = [symbol,false] # turn off highlight printing after printing once
    return symbol.light_yellow.bold.on_blue
  else
    return symbol
  end
end
